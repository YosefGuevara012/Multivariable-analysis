\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\section{Visualización de Datos}
Código cargar los datos y construir la gráfica 3D con los cafés e imprimir la
matriz Y 

<<>>=

library ( FactoClass ); 
data ( cafe ); 
Y <- cafe [1:10 ,1:3];
par ( las =1); # grafica ;
Y3D <- scatterplot3d (Y, main ="Y",type ="h",color =" black ",box=FALSE ,las =1);
Y3D $ points3d (Y, pch =1);
addgrids3d (Y, grid = c("xy","xz","yz"));
cord2d <-Y3D$xyz.convert (Y) # convertir cordenadas 3D a 2D;
# poner etiquetas ;
# text ( cord2d , labels = rownames (Y), cex =0.8 , col=" black ",pos =3);
# xtable (Y, digits =c(0 ,0 ,1 ,0)) # para tabular de LaTeX ;

@

\begin{table}[ht]
\centering
\begin{tabular}{rrrr}
\hline
& Color & DA & EA \\
\hline
ExCl & 298 & 385.1 & 25 \\
C40M & 361 & 481.3 & 41 \\
C40C & 321 & 422.6 & 40 \\
C20M & 335 & 444.3 & 33 \\
C20C & 314 & 368.7 & 32 \\
ExOs & 186 & 346.6 & 28 \\
O40M & 278 & 422.6 & 43 \\
O40C & 238 & 403.0 & 42 \\
O20M & 226 & 368.7 & 36 \\
O20C & 210 & 368.7 & 35 \\
\hline
\end{tabular}
\end{table}

\section{Calculo del Centro de Gravedad}
Código para calcular y adicionar el centro de gravedad a la figura

<<>>=

g <- colMeans (Y) # centro de gravedad ;
Y3D$points3d (t(g), pch =19 , col=" darkgreen ",type = "h");
text ( Y3D$xyz.convert (t(g)), labels ="g",pos =3, col=" black ", cex =1.3);

@

\section{Centro de datos}
Centrar los datos, graficarlos en 3D e imprimir la matriz Yc

<<>>=
n <- 10
par ( las =1);
unos <-rep (1,n); # vector de n unos
Yc <- Y - unos%*%t(g); 


# grafica de datos centrados

Yc3D <- scatterplot3d (Yc , main ="Yc",type ="h",color =" black ", box =FALSE , las =1);
Yc3D$points3d (Yc , pch =1);
addgrids3d (Yc , grid =c("xy", "xz", "yz" ));
text ( Yc3D$xyz.convert (Yc), labels = rownames (Yc),cex =0.8 , col =" black ",pos =3);
Yc3D $ points3d (t(c(0 ,0 ,0)) , pch =19 , col =" black ",type = "h");
text ( Yc3D$xyz.convert (t(c(0 ,0 ,0))) , labels ="0",pos =3, col =" black ",cex =1.3);


@

\section{Distancia al centro de graverdad}

<<>>=

Y_dist <- round(as.dist(dist(Y)),0);
Y_dist

@

\section{Calculo de matriz de varianzas}

Multuplica la matriz de

<<>>=

par ( las =1) # etiquetas de los dos ejes sean horizontales ;

# Calculo de la matriz de Varianzas y covarianzas

V <-t(Yc) %*% as.matrix (Yc)/n;
V

# V = var (Y)*(n -1)/n; # Se usa porque R toma los datos como una muestra y no una población
@

\section{Calculo de la matriz diagonal}

Toma lo valores de la diagonal de la matriz de varianzas

<<>>=
# Diagonalización de la Matriz

Dsigma <- diag ( sqrt ( diag (V ))); 
round (diag(Dsigma ) ,1);

@

\section{matriz normalizada X}

<<>>=

X <-as.matrix (Yc) %*% solve (Dsigma); 
colnames (X) <- colnames (Y);
X3D <- scatterplot3d (X, main ="X",type ="h",box= FALSE );
X3D$points3d (Yc , pch =1);
addgrids3d (X, grid =c("xy","xz","yz" ));
text ( X3D $ xyz.convert (X), labels = rownames (X),cex =0.8 , pos =3);
X3D $ points3d (t(c(0 ,0 ,0)) , pch =19 , col=" black ",type ="h");
# text ( X3D $ xyz.convert (t(c(0 ,0 ,0))) , labels ="0",pos =3, col=" black ",cex =0.8);
# xtable (X, digits = rep (1 ,4)) # tabla para LaTeX ;

@

\begin{table}[ht]
\centering
\begin{tabular}{rrrr}
\hline
& Color & DA & EA \\
\hline
ExCl & 0.4 & -0.4 & -1.8 \\
C40M & 1.5 & 2.0 & 1.0 \\
C40C & 0.8 & 0.5 & 0.8 \\
C20M & 1.0 & 1.1 & -0.4 \\
C20C & 0.7 & -0.8 & -0.6 \\
ExOs & -1.6 & -1.4 & -1.3 \\
O40M & 0.0 & 0.5 & 1.3 \\
O40C & -0.7 & 0.0 & 1.1 \\
O20M & -0.9 & -0.8 & 0.1 \\
O20C & -1.2 & -0.8 & -0.1 \\
\hline
\end{tabular}
\end{table}

\section{Distancias de los datos estandarizadso}
Distancias entre cafés cuando los datos están estandarizados(centrados y reducidos)

<<>>=
X<-scale(Y); 
X_dist <- round(as.dist(dist(X)),1);

X_dist
@

\section{Obtencion de los valores y vectores propios}

<<>>=

des <-eigen (V); 
des # calculo de valores y vectores propios
lambda <-des$values
U <- des$vectors # matriz con vectores propios en columnas
rownames(U) <- rownames (V)
colnames(U) <- c(" Eje1 "," Eje2 "," Eje3 "); round (U ,3)
lambda
U

@

\section{}

<<>>=
F <- X %*% U
round ( sort (F[ ,1]) ,2)

@

\section{Código para obtener el primer plano factorial y la tabla}

<<>>=

F <- X %*% U; 
round (F ,2) # coordenadas sobre los nuevos ejes
plot (F[ ,1:2] , las =1, asp =1) # plano 12
text (F[ ,1:2] , label = rownames (F), col=" black ",pos =2) # etiquetas
abline (h=0,v=0, col =" darkgrey ") # ejes
rowSums (F^2)-> d2;d2 # distancias
1/n*F^2 %*%diag (1/ lambda )*100 -> cont # contribuciones
F^2/d2*100 -> cos2 # cosenos cuadrados
# tabla de ayudas para la interpretacion
Ayu <-cbind ( dis2 =d2 ,F1=F[ ,1] , F2=F[ ,2] , cont1 = cont [,1] , cont2 =
cont [,2] , cos21 = cos2 [ ,1] , cos22 = cos2 [,2] ,
cosp = rowSums ( cos2 [ ,1:2]))
round (Ayu ,2) # ayudas en consola
#xtable (Ayu , digits = rep (2 ,9)) # salida para LaTeX

@

% latex table generated in R 3.6.1 by xtable 1.8-4 package
% Sun Sep 13 19:22:39 2020
\begin{table}[ht]
\centering
\begin{tabular}{rrrrrrrrr}
\hline
& dis2 & F1 & F2 & cont1 & cont2 & cos21 & cos22 & cosp \\
\hline
ExCl & 3.25 & 0.04 & 0.82 & 0.00 & 0.02 & 0.06 & 20.75 & 20.81 \\
C40M & 6.58 & 2.28 & -0.97 & 0.01 & 0.02 & 78.87 & 14.21 & 93.08 \\
C40C & 1.38 & 0.93 & -0.15 & 0.00 & 0.00 & 63.26 & 1.57 & 64.83 \\
C20M & 2.23 & 1.38 & -0.24 & 0.00 & 0.00 & 86.08 & 2.62 & 88.70 \\
C20C & 1.34 & 0.09 & 1.09 & 0.00 & 0.03 & 0.61 & 88.10 & 88.71 \\
ExOs & 5.61 & -2.04 & 0.46 & 0.01 & 0.00 & 74.38 & 3.79 & 78.17 \\
O40M & 1.78 & 0.33 & -0.63 & 0.00 & 0.01 & 6.30 & 22.38 & 28.68 \\
O40C & 1.57 & -0.50 & -0.58 & 0.00 & 0.01 & 15.71 & 21.62 & 37.32 \\
O20M & 1.36 & -1.15 & 0.16 & 0.00 & 0.00 & 96.57 & 1.87 & 98.43 \\
O20C & 1.90 & -1.38 & 0.04 & 0.00 & 0.00 & 99.84 & 0.09 & 99.93 \\
\hline
\end{tabular}
\end{table}


\section{Calcular las coordenadas factoriales de los dos cafés comerciales
y su proyección sobre el primer plano factorial}

<<>>=
comer <-as.matrix ( cafe [11:12 ,1:3]);
comer
comc <-comer - rep (1 ,2) %*%t(g); 
comc # centrado
comcr <- comc %*%solve ( Dsigma ) # reducido
colnames ( comcr ) <- colnames ( comer ); comcr
Fsup <- comcr %*%U; 
Fsup
# primer plano factorial
plot (F[ ,1:2] , las =1, asp =1)
text (F[ ,1:2] , label = rownames (F), col=" black ",pos =1)
abline (h=0,v=0, col=" darkgrey ")
points (Fsup ,col =" black ",pch =20) # cafes comerciales
text (Fsup , labels =c(" Com1 "," Com2 "), col=" darkgreen ",pos =2)
@

\section{Código para calcular las coordenadas de las categorías de contaminación y
proyectarlas sobre el primer plano factorial}

<<>>=
conta <-factor (c(" exce "," maiz "," ceba "," maiz "," ceba "," exce ",
" maiz "," ceba "," maiz "," ceba "))
centroids (F, conta )$ centroids -> Fconta ; Fconta
points ( Fconta ,col =" brown ",pch =20)
text ( Fconta , col=" brown ",labels = rownames ( Fconta ),pos =2)

@

\section{}

<<>>=

G <-U %*% diag(sqrt(lambda)); 
G <- G / G # G <- cor (Y,F)

colnames (G) <-c("G1","G2","G3");
G3D <- scatterplot3d (G, main ="G")
coord <- G3D$xyz.convert(G)
text (coord , labels = rownames (G), cex =0.8 , col=" black ",pos =4)
G3D$ plane (0 ,0 ,0 , col =" darkgrey ")
G3D$ points3d (t(c(0 ,0 ,0)) , pch =19 , col=" black ")

cero <- G3D$xyz.convert (0, 0, 0)

for (eje in 1:3) {
arrows ( cero $x, cero $y, coord $x[ eje ], coord $y[eje ], lwd = 2,
length = 0.1)
}
# dev . print ( device =xfig , file =" cafeEspera .fig ")# grafica en xfig

s.corcircle (G, clabel =2);
# proyeccion de nota como variable ilustrativa

Nota <- cafe [1:10 ,16]; Nota ;
Fnota <- cor (Nota ,F); Fnota ;
arrows (0,0 , Fnota [1] , Fnota [2] , col =" black ",angle =10 , lty =2);
text (Fnota ," Nota ",col =" black ",pos =1, cex =2, font =3);



@





\end{document}